apply plugin: 'com.android.application'

/**
 * Check if a signing.gradle file exists and import it
 */
if (file(rootProject.projectDir.getAbsolutePath() + '/signing.gradle').exists()) {
    apply from: rootProject.projectDir.getAbsolutePath() + '/signing.gradle'
}

// define build version
def versionMajor = 1
def versionMinor = 2
def versionPatch = 0
def versionBuild = 0

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "be.flashapps.mwfwsoundboard"
        minSdkVersion 21
        targetSdkVersion 32

        // generate versionCode and versionName from defined major, minor, versionPatch, versionBuild
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        flavorDimensions "versionCode"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    /*applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            if (file != null && file.name.endsWith('.apk')) {
                def suffix = "_" + defaultConfig.applicationId + "_" + defaultConfig.versionName + "_" + defaultConfig.versionCode
                def outputFileNameTest = file.name.replace(".apk", suffix + ".apk")
                outputFileName = new File(outputFileNameTest)
            }
        }
    }*/

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def file = output.outputFile
            if (file != null && file.name.endsWith('.apk')) {
                def suffix = "_" + defaultConfig.applicationId + "_" + defaultConfig.versionName + "_" + defaultConfig.versionCode + ".apk"
                def outputFileNameTest = file.name.replace(".apk", suffix)
                outputFileName = new File(outputFileNameTest)
            }
        }
    }

    buildFeatures {
        viewBinding = true
    }
    /*configurations.all {
        resolutionStrategy {
            force 'com.android.support:design:23.4.0'
            force 'com.android.support:support-v4:23.4.0'
            force 'com.android.support:appcompat-v7:23.4.0'
        }
    }*/
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //Dialogs
    implementation('com.mikepenz:materialdrawer:5.8.0@aar') {
        transitive = true
    }
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.github.orhanobut:logger:1.12'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.pixplicity.easyprefs:library:1.5'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.0.1'
    implementation 'com.afollestad.material-dialogs:commons:0.9.0.1'
    implementation 'net.danlew:android.joda:2.9.5'
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'
    implementation 'io.realm:android-adapters:1.4.0'
    implementation 'com.github.rubensousa:gravitysnaphelper:1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    implementation 'androidx.core:core-splashscreen:1.0.0-beta01'

}




